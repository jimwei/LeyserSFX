                           ユーザーマニュアル
                           ~~~~~~~~~~~~~~~~~~
                          RAR 5.01 コンソール版
                          ~~~~~~~~~~~~~~~~~~~~~

                       =-=-=-=-=-=-=-=-=-=-=-=-=-=-
                       Welcome to the RAR Archiver!
                       -=-=-=-=-=-=-=-=-=-=-=-=-=-=

 紹介
 ~~~~

  　RAR はコマンドラインで書庫ファイルを管理できるコンソールアプリケーション
  です。RAR はこのマニュアルで説明する圧縮、暗号化、データ復旧などの機能を
  提供します。

  　RARは、".rar" の拡張子を持つ RAR 形式だけをサポートします。
  　ZIP や他の形式はサポートしていません。もし .zip 拡張子を指定して書庫を
  作成したとしてもそれはRAR形式で作成されます。
 
 　Windows 版 RAR には GUI版の WinRAR がインストールされています。
  WinRAR は多くの書庫形式を処理することができます。

  　コンソール版RARとGUI版WinRARは、似たコマンドライン文法がありますが、
  いくつかの違いがあります。
  　コンソール版RARにはこの rar.txtを、WinRARには winrar.chmをマニュアル
  として利用することを推奨します。


 設定ファイル
 ~~~~~~~~~~~~

  Unix 版の RAR は、ユーザーのホームディレクトリか /etc ディレクトリの
  .rarrc から環境設定の情報を読み込みます。(HOME 環境変数に格納されます)

  Windows 版の RAR は、rar.exe のあるディレクトリにある rar.ini から
  環境設定の情報を読み込みます。

  このファイルには次のように文字列を含めることができます。

  [registration]
  switches=空白で区切った任意の RAR スイッチ

  例：常に信頼証明を付加します。
  switches=-av

 環境変数
 ~~~~~~~~

    環境変数 "RAR" に指定することによって、RAR のコマンドラインに
    デフォルトパラメータを追加することができます。

    例えば Unix では下の行を profile に追加することができます。

      RAR='-s -md1024'
      export RAR

    RAR はこの文字列をコマンドラインのデフォルトパラメータとして使用して、
    1024 KB の辞書サイズで、ソリッド書庫を作成します。

    RAR は以下のような優先度でオプションを扱います。

       コマンドラインスイッチ                  最も高い優先度
       RAR 変数のスイッチ                      低い優先度
       設定ファイルに保存されたスイッチ        最も低い優先度


 ログファイル
 ~~~~~~~~~~~~

  スイッチ -ilog が、コマンドラインもしくは設定ファイルで指定された場合、
  RAR は、書庫の処理中に発生したエラーに関する情報をログファイルに書き出し
  ます。詳細は -ilogスイッチの説明を参照してください。


 ソリッド圧縮のためのファイルオーダーリスト - rarfiles.lst
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  rarfiles.lst は、ソリッド書庫にファイルを追加する順番を RAR に指定する
  ユーザー定義のファイルリストです。これには、ファイル名、ワイルドカード、
  特別なエントリである $default を含めることができます。
  default エントリは、このファイルの他のエントリに一致しなかったファイル
  のオーダーリストの位置を定義します。; はコメント文字です。

  Windows では、RAR と同じディレクトリか %APPDATA%\WinRAR に置かれ、
  Unix ではユーザーのホームディレクトリか /etc に置かれます。

  圧縮と処理速度を改善するためのヒント

  - できれば、似ているファイルは書庫の中で集めた方がよいです。
  - よくアクセスされるファイルは始めの方に置いた方がよいです。

  通常、マスクはリストの上位に近いところに位置したものが高い優先度を持ち
  ますが、このルールには例外があります。rarfiles.lst が、1つ目ですべての
  ファイルにマッチして、他で同じようにマッチするような2つのマスクを含んで
  いる場合、ファイル名に狭い範囲で一致するマスクが、リストの位置に関わらず
  高い優先度を持ちます。例えば、*.cpp と f*.cpp のマスクの場合、f*.cpp が
  高い優先度を持ちます。そのため、filename.cpp の位置は *.cpp ではなく
  f*.cpp によって選ばれます。


 RAR コマンドライン文法
 ~~~~~~~~~~~~~~~~~~~~~~

 文法

    RAR <コマンド>  [ -<スイッチ> ]  <書庫>  [ <@リストファイル...> ]
        [ <ファイル...> ]  [ <解凍先パス\> ]

 説明

    コマンドラインオプション（コマンド、スイッチ）で、RAR で書庫を作成
    または処理する際の制御をすることができます。コマンドは RAR に対応
    する動作を行うように命令する文字列（または１文字）です。スイッチは
    RAR が動作を変更するために指定されます。他のパラメータは書庫名と圧縮
    されるファイル、または書庫から解凍されるファイルです。

    リストファイルは処理するファイル名を記述したテキストファイルです。
    ファイル名はリストの１桁目から記述する必要があります。
    リストファイルには、// の後方にコメントを記述することができます。
    例えば、次のようなテキストで backup.lst を作成できます。

    c:\work\doc\*.txt         //テキスト文書のバックアップ
    c:\work\image\*.bmp       //画像のバックアップ
    c:\work\misc

    実行するには:

       rar a backup @backup.lst

    ファイル名を標準入力から読み込ませたければ、空のリストファイル名
    （@ だけ）を指定してください。

    デフォルトでは、コンソール RAR はシングルバイトエンコーディング
    を使用します。これは -sc<charset>l スイッチで再定義できます。

    コマンドラインには、通常のファイル名とリストファイルを同時に指定
    できます。ファイル名もリストファイル名も指定されない場合は、*.*
    が指定されたものとして、RAR はすべてのファイルを処理します。

    解凍やテストやリストのような多くのRARコマンドでは、書庫名に
    ワイルドカードを使用することができます。書庫のマスクに拡張子を
    指定しない場合、RAR は .rar を指定されたものとします。
    そのため、* はすべての書庫の拡張子が .rar であることを意味します。

    もし拡張子がないすべての書庫を処理したい場合には、*. マスクを
    使用してください。*.* マスクはすべてのファイルを選択します。
    ワイルドカードは圧縮と削除の書庫名には使用できません。

    Unix では、RAR コマンドラインパラメータにワイルドカートが含まれて
    いる場合は、Unix シェルに展開されることを避けるためにシングル
    クォートやダブルクォートで括る必要があります。例えば、このコマンドは
    カレントディレクトリの RAR 書庫から *.asm ファイルを解凍します。

       rar e '*.rar' '*.asm'


    すべてのコマンドは次の通りです。

    a       書庫にファイルを圧縮します。

            例：

            カレントディレクトリのすべてのファイルを圧縮して、書庫
            myarch を作成、またはすでに同一書庫が存在する場合は更新します。

            rar a myarch

            例:

            1) カレントフォルダのすべての *.hlp ファイルを書庫 help.rar
               に圧縮します。 

            WinRAR a help *.hlp

            2) カレントフォルダとサブフォルダのすべてのファイルを362000
               バイトごとのボリュームにソリッド圧縮して、save.part1.exe,
               save.part2.rar, save.part3.rar, ...の自己解凍ボリュームを
               作成します。

            それぞれのボリュームにリカバリレコードを付加します。 

            WinRAR a -r -v362 -s -sfx -rr save

            ファイル名が指定されていないので、すべてのファイル名 (*) と
            みなします。

            3) 特殊な例外として、引数で指定されたフォルダにファイルマスクと
               最後の\が含まれていなかった場合には、スイッチ -rが指定されて
               いなくても、フォルダとサブフォルダに含まれているすべての
               ファイルが書庫に追加されます。 

            以下のコマンドはBitmapsフォルダのすべてのファイルを RAR書庫
            Pitures  に圧縮します。

            WinRAR a Pictures.rar Bitmaps

            4) フォルダ名がファイルマスクや\を含んでいた場合には通常の
               ルールが適用され、サブフォルダのファイルを圧縮するためには
               引数にスイッチ -rを指定する必要があります。 

            次のコマンドは、Bitmaps フォルダのすべてのファイルを RAR書庫
            Pitures に圧縮します。しかし、-rが指定されていないのでサブ
            フォルダのファイルは圧縮されません。

            WinRAR a Pictures.rar Bitmaps\*


    c       書庫にコメントを付加します。コメントは書庫を処理している間
            表示されます。コメントの長さは 62000 バイトに制限されます。

            例：

            rar c distrib.rar

            同じように -z[name] スイッチでコメントをファイルから追加する
            こともできます。
            下は info.txt からコメントを追加するコマンドです。

            rar c -zinfo.txt dummy


    ch      書庫のパラメータを変更します。

            このコマンドは、多くの書庫を変更するスイッチと組み合わせて
            書庫のパラメータを変更するために使用できます。特に専用の
            コマンドがない -cl, -cu, -tl のようなスイッチを適用させる
            のに便利です。

            このコマンドで再圧縮、暗号化、復号化、ボリュームのマージ、
            作成を行うことはできません。スイッチを何も指定しない場合には
            'ch' コマンドは書庫のデータを何も変更しないでコピーします。

            例:

            最新のファイルのタイムスタンプを書庫のタイムスタンプにセット
            します。

            rar ch -tl files.rar


    cw      指定されたファイルにコメントを書き出します。

            出力ファイルの形式は -sc スイッチに依存します。

            出力ファイル名が指定されていない場合、コメントデータは
            標準出力に出力されます。

            例：

            1) rar cw arc comment.txt

            2) rar cw -scuc arc unicode.txt

            3) rar cw arc


    d       書庫からファイルを削除します。
            注：このコマンドで書庫からすべてのファイルを削除した結果
                書庫が空になった場合は、書庫は削除されます。


    e       パス情報を使わずにファイルを解凍します。

            パス情報を除外してファイルを解凍します。そのため、すべての
            ファイルは同じディレクトリに作成されます。

            フルパスで解凍したい場合は、'x' コマンドを使用してください。

            例:

            rar e -or html.rar *.css css\

            すべての *.css ファイルが html.rar 書庫から 'css' フォルダに
            書庫ファイル内のパスを除外して解凍されます。
            同じ名前のファイルが複数あった場合には解凍されたファイルは
            自動的にリネームされます。


    f       書庫内のファイルを最新にします。書庫がパックされてから変更
            されたファイルを更新します。このコマンドは新しいファイルは
            追加しません。


    i[i|c|h|t]=<string>
            書庫から文字列を検索します。

            以下の任意のパラメータをサポートします。

              i - 大文字小文字を区別しないで検索（デフォルト）

              c - 大文字小文字を区別して検索

              h - 16進検索

              t - ANSI, Unicode, OEM 文字テーブルを使用 (Windows のみ)

            パラメータを指定しない場合は、i=<string> の代わりに簡略化した
            コマンド文法 i <string> を使うことができます。

            't' 修飾子は他のパラメータと同時に指定することができます。
            例えば、ict=string はすべての文字テーブルを使用して、
            大文字小文字を区別する検索を実行します。

            例:

            1) rar "ic=first level" -r c:\*.rar *.txt

            ディスク c: にある *.rar 書庫内の *.txt ファイルから
            "first level" 文字列を大文字小文字を区別して検索します。

            2) rar ih=f0e0aeaeab2d83e3a9 -r e:\texts

            e:\texts ディレクトリの rar 書庫から16進文字列
            f0 e0 ae ae ab 2d 83 e3 a9 を検索します。


    k       書庫をロックします。書庫を変更するいかなるコマンドも無視され
            るようになります。

            例：

            rar k final.rar


    l[t[a],b]
            書庫の内容をリストします[テクニカル [すべて], ファイル名のみ]

            'l' コマンドは圧縮されたファイルの属性、サイズ、日時、
            ファイル名を１行にリストします。ファイルが暗号化されて
            いる場合は、行の先頭に * が付きます。

            'lt' はマルチラインモードでファイルの詳細情報を表示します。
            この情報は、ファイルのチェックサム、ホストOS、圧縮オプション
            などのパラメータを含みます。

            'lta' はファイルだけではなく、NTFSストリームやファイル
            セキュリティデータのような情報も含みます。

            'lb' は、１行にフルパスのファイル名だけをリストします。

            -v スイッチを使って、ボリュームセットのすべてのボリューム
            の内容をリストできます。
            例: rar l -v vol.part1.rar

            コマンド 'lt', 'lta', 'lb' は 'vt', 'vta', 'vb' と対応して
            います。


    m[f]    書庫に移動します[ファイルのみ]。ファイルとディレクトリを移動
            するということはファイルとディレクトリのパックが成功した後に
            元のファイルが削除されるという結果になります。f 修飾を使い、
            また -ed スイッチを使う場合にはディレクトリは削除されません。


    p       ファイルを標準出力に出力します。

            このコマンドと -inul スイッチを同時に使うと、すべての RAR の
            メッセージを無効にして、ファイルデータだけを出力できます。
            パイプを使うためにファイルを標準出力に送る必要があるときに
            重要です。


    r       書庫を修復します。書庫の修復は２つの段階で実行されます。
            最初に、ダメージを受けた書庫のリカバリレコードが検索されます
           （rr コマンド参照）。
            書庫がリカバリレコードを含み、ダメージを受けた部分が連続的で
            あれば、書庫を復元できる可能性は非常に高いです。この段階が
            完了すれば、fixed.arcname.rar という新しい書庫が作成されます。
            'arcname' は元の（壊れた）書庫の名前です。

            壊れた書庫がリカバリレコードを含んでいない、もしくはダメージ
            が大きいため完全に修復できない場合は、次の段階が実行されます。
            この段階では、書庫の構造だけが復元され、チェックサム検査に
            失敗したファイルを修復することはできません。しかし、壊れた
            書庫構造のためにアクセスできなかったダメージのないファイルを
            修復することができます。通常、ソリッドでない書庫に有効です。
            この段階ではリカバリレコードがない場合には修復できないので、
            暗号化されたファイルヘッダを持つ書庫には効率的ではありません。

            ２番目の段階が完了すれば、復元された書庫は rebuilt.arcname.rar
            として保存されます。'arcname' は元の書庫の名前です。

            デフォルトでは、修復された書庫はカレントディレクトリに作成され
            ます。この作成先は、オプションの destpath\ パラメータを追加して
            別のフォルダを指定することができます。

            例：

            rar r buggy.rar c:\fixed\

            buggy.rar を修復して、'c:\fixed' ディレクトリに作成します。


    rc      リカバリボリューム (.rev ファイル) を使用して、欠けている
            ボリュームや壊れているボリュームを復元します。書庫名として
            どれか存在するボリュームを指定する必要があります。
            例: 'rar rc backup.part03.rar'

            リカバリボリュームについては、'rv' コマンドを参照してください。


    rn      書庫内のファイルの名前を変更します。

            このコマンドの文法は次の通りです。

            rar rn <書庫名> <変更前の名前1> <変更後の名前> ... 
                                      <変更前の名前N> <変更後の名前N>

            例えば、次のコマンドでは、書庫 data.rar に格納されている
            readme.txt が readme.bak に、info.txt が info.bak に
            名前が変更されます。

            rar rn data.rar readme.txt readme.bak info.txt info.bak

            ファイルの拡張子を変更するような簡単な変更は、変更前と
            変更後の名前にワイルドカードを使うことができます。例えば、
            次のコマンドでは、すべての *.txt ファイルは *.bak に名前が
            変更されます。

            rar rn data.rar *.txt *.bak

            RAR は変更後の名前と同じ名前のファイルが書庫にすでにあった
            としても確認しません。そのため、名前が同じになってしまわない
            ように注意する必要があります。これはワイルドカードを使うとき
            に特に重要です。ワイルドカードを使ったコマンドは潜在的に
            危険です。誤ったワイルドカードは、格納されたすべてのファイル
            の名前を同じにしてしまう可能性があるからです。


    rr[N]   データリカバリレコードを付加します。任意で、冗長な情報
            （リカバリレコード）を書庫に付加することができます。これは
            書庫のサイズを少し増加させますが、被害があまり大きすぎない
            場合に限り、ディスク障害やあらゆる種類のデータ損失から書庫
            ファイルを修復するのに役立ちます。
            これらは "r" （修復）コマンドで修復できます。

            RAR 4.x と RAR 5.0 では、リカバリーレコードの構造とアルゴリ
            ズムが異なります。

            RAR 4.x リカバリーレコードは XOR アルゴリズムをベースにして
            います。
            リカバリーセクターの数値としてか、書庫サイズのパーセントとして
            4.x レコードサイズを指定することができます。
            数値をセクター数で指定したい場合は、'rr' の後ろに直接指定して
            ください。1000セクターの場合は、'rr1000'になります。
            パーセントの場合は'p'または'%'の識別子を数値の後ろに付けて
            ください。5%の場合は、'rr5p'または'rr5%'になります。
            このコマンドを Windows の .bat や .cmd ファイルで実行する場合は、
            'rr5%' ではなく 'rr5%%' としてください。コマンドプロセッサは、
            '%' 1文字を、バッチファイルのパラメータとして扱ってしまうから
            です。そのためこのような場合は'%'よりも'p'の方が便利です。

            RAR 4.x リカバリーセクターは 512 バイトです。
            ダメージを受けた部分が連続的である場合、それぞれのリカバリ
            セクタがダメージを受けた情報の 512 バイトを修復するのを助け
            ます。この値は多くのダメージがある場合、低くなることがあります。
            リカバリーセクターの最大値は 524,288 バイトです。

            4.x リカバリーレコードのサイズはおおよそ次のような公式で決定
            されます。

               <書庫サイズ> ÷ 256 ＋ <リカバリーセクタ数> × 512 バイト

            RAR 5.0 リカバリーレコードは、リード・ソロモン誤り訂正符号を
            使用します。連続的な被害を修復する能力は、RAR 4.x とほぼ同等
            ですが、修復することができるのはリカバリーレコードサイズより
            わずかに少ないデータになります。しかし、複数の場所が壊れた
            場合は、RAR 4.0 リカバリーレコードよりかなり効率的です。

            RAR 5.0 リカバリーレコードは、512 バイトセクターを使いません。
            そして、サイズは書庫サイズのパーセントとしてのみ指定できます。
            '%' や 'p' の識別子が指定されていなくても、RAR は 5.0形式の
            場合は値をパーセントとみなすので、'rr5' と 'rr5p' は両方とも
            5% を意味します。
            データのオーバーヘッドのため、リカバリーレコードサイズの実際
            の結果は、ユーザーが指定したパーセントにほぼ一致する程度になり、
            書庫が小さいときに誤差が大きくなります。

            RAR 5.0 リカバリーレコードサイズは保護する書庫サイズを超える
            ことができないので、パラメーターに 100% 以上を指定することは
            できません。
            リカバリーレコードを大きくすると、書庫の作成、修復の処理速度が
            遅くなります。

            RAR 5.0 リカバリーレコードは、自身の被害に、より抵抗し、壊れた
            リカバリーレコードデータを部分的に使用することができます。
            しかし、'R' 修復コマンドは、リカバリーレコードの壊れた部分に
            ついては修復しないことに注意してください。
            修復されるのはファイルデータのみです。
            書庫の修復後、新しいリカバリーレコードを作成する必要がある
            かもしれません。

            4.x と 5.0 リカバリーレコードは、壊れた書庫のデータ位置が
            移動されていないときが最も効果的です。
            書庫を特別なソフトウェアを使って壊れたメディアからコピーする
            場合は、被害を受けた部分を 0 で埋めるか、取り除いてください。
            0 や他の値で埋めるのは、オリジナルのデータ位置が保存できて
            好ましいです。
            しかし、それが最善のモードではないとしても、両方のバージョンは
            データが移動された場合でも適切なサイズの削除・挿入をして修復
            しようと試みます。
            RAR 5.0 リカバリーレコードは RAR 4.x よりも効果的に削除・挿入
            を行います。

            'rr' コマンドをパラメータなしで使用する場合は、デフォルト値の
            書庫サイズの 3% になります。

            例:

            rar rr5p arcname

            書庫サイズの5%のリカバリーレコードを追加します。


    rv[N]   リカバリボリューム (.rev ファイル) を作成します。ボリューム
            セットの欠けているファイルや壊れているファイルを復元するのに
            使用できます。
            このコマンドはマルチボリューム書庫にだけ意味があります。
            そして、書庫名として最初のボリュームの名前を指定する必要が
            あります。例えば次のようになります。

            rar rv3 data.part01.rar

            この機能はバックアップに便利です。または例を挙げると、
            ニュースグループにマルチボリューム書庫をポストしたときに
            購読者の一部がそれらのファイルを受信できなかったとします。
            そのようなときに通常のボリュームではなくリカバリボリューム
            を再ポストすることで、ファイルの総数を減らすことができます。

            各リカバリボリュームは１つの欠けているか壊れている RAR
            ボリュームを復元できます。例えば、30 個のボリュームと 3 個
            のリカバリボリュームがあるときには、どんな 3 つの欠けている
            ボリュームでも復元できます。.rev ファイルの数が欠けている
            ボリュームの数より少ない場合は復元はできません。ボリュームと
            リカバリボリュームの総数は RAR 4.x では255、RAR 5.0 では
            65535 を超えることはできません。

            リカバリボリュームを作成したあとに元のRARボリュームを変更
            してはいけません。復元のアルゴリズムはREVファイルと無くなった
            RARボリュームを復元するためのRARボリュームの両方のデータを
            使用します。そのため、RARボリュームを更新してしまう（例えば
            REVファイルを作成後にRARボリュームにロックをかけたり）と、
            復元処理は失敗してしまいます。

            追加のリカバリーデータとして、RAR 5.0 リカバリボリュームは
            保護したRARファイルのチェックサムのようなサービス情報を格納
            します。そのため、これらは保護するRARボリュームよりもわずかに
            大きいです。
            もし、個々のRARとREVファイルを同じリムーバブルメディアに
            コピーしようとする場合は、それを考慮にいれ、RARボリューム
            サイズにメディアのサイズより数キロバイト小さいサイズを指定
            する必要があります。

            オプションパラメータ <N> には、作成するリカバリボリュームの
            数を指定します。ボリュームの総数より少なくなければいけません。
            このパラメータに % を付けることもできます。この場合、RAR
            ボリュームの総数のパーセンテージとしての数の .rev ファイルが
            作成されます。例えば次のようになります。

            rar rv15% data.part01.rar

            RAR は rc コマンドを使ったときや、解凍するときに次のボリューム
            に位置付けられず .rev ファイルの必要な数を見つけたときに、自動
            的に欠けたボリュームや壊れたボリュームを復元します。

            元の壊れたボリュームは復元の前に *.bad に名前を変更してコピー
            されます。例えば、volname.part03.rar は volname.part03.rar.bad
            に名前を変更されます。


    s[name] 書庫を自己解凍書庫に変換します。書庫は自己解凍モジュールと
            結合（default.sfx もしくはスイッチで指定されたモジュールを
            使用します）されます。
            Windows 版の default.sfx は、rar.exe と同じディレクトリに、
            Unix では、ユーザーのホームディレクトリか、/usr/lib か
            /usr/local/lib に置く必要があります。


    s-      存在する自己解凍書庫から自己解凍モジュールを取り除きます。
            RAR は自己解凍モジュールを取り除いた新しい書庫を作成します。
            元の自己解凍書庫は削除されません。


    t       書庫ファイルをテストします。このコマンドは指定されたファイル
            を検査するために、架空のファイルの解凍を実行しますが、
            出力ストリームには何も書き出しません。

            例：

            カレントディレクトリの書庫をテストします。

            rar t *

            Unix では

            rar t '*'

            カレントパスのすべてのサブディレクトリを含めて書庫をテスト
            することもできます。

            rar t -r *

            Unix では

            rar t -r '*'


    u       書庫のファイルを更新します。まだ圧縮されていないファイルと
            書庫に圧縮されてから変更されたファイルを更新します。


    v[t[a],b]
            書庫の冗長な内容をリストします[テクニカル [すべて], ファイル名のみ]

            'v' コマンドは圧縮されたファイルの属性、サイズ、圧縮サイズ、
            圧縮率、日時、チェックサム、ファイル名を１行にリストします。
            ファイルが暗号化されている場合は、行の先頭に * が付きます。
            BLAKE2sp チェックサムでは、最初の２個と最後の１個シンボルだけが
            表示されます。

            'vt' はマルチラインモードでファイルの詳細情報を表示します。
            この情報は、ファイルのチェックサム、ホストOS、圧縮オプション
            などのパラメータを含みます。

            'vta' はファイルだけではなく、NTFSストリームやファイル
            セキュリティデータのような情報も含みます。

            'vb' は、１行にフルパスのファイル名だけをリストします。

            -v スイッチを使って、ボリュームセットのすべてのボリューム
            の内容をリストできます。
            例: rar v -v vol.part1.rar

            コマンド 'vt', 'vta', 'vb' は 'lt', 'lta', 'lb' と対応して
            います。


    x       パスを付けてファイルを解凍します。

            例：

            1) 10cents.txt をカレントディレクトリに解凍します。
               書庫コメントは表示しません。

               rar x -c- dime 10cents.txt

            2) docs.rar から *.txt を c:\docs ディレクトリに解凍します。

               rar x docs.rar *.txt c:\docs\

            3) docs.rar の全データをカレントディレクトリに解凍します。

               rar x docs.rar


    スイッチ (コマンドと同時に使用します)


    -?      コマンドとスイッチのヘルプを表示します。コマンドを入力し
            なかったとき、コマンドが正しくないときも同様です。


    --      スイッチの走査を中止します。

            このスイッチはコマンドラインにこれ以上スイッチがないことを
            示します。書庫やファイル名が、- で始まる名前の時に有効です。
            '--'スイッチがない場合、このような名前は、スイッチとして
            扱われてしまいます。

            例：

            カレントディレクトリのすべてのファイルをソリッド書庫
            -StrangeName に圧縮します。

            RAR a -s -- -StrangeName


    -@[+]   Disable [enable] file lists

            RAR treats command line parameters starting from '@' character
            as file lists. So by default, RAR attempts to read 'filename'
            filelist, when encountering '@filename' parameter.
            But if '@filename' file exists, RAR treats the parameter
            as '@filename' file instead of reading the file list.

            Switch -@[+] allows to avoid this ambiguity and strictly
            define how to handle parameters starting from '@' character.

            If you specify -@, all such parameters found after this switch
            will be considered as file names, not file lists.

            If you specify -@+, all such parameters found after this switch
            will be considered as file lists, not file names.

            This switch does not affect processing parameters located
            before it.

            Example:

            test the archived file '@home'

            rar t -@ notes.rar @home


    -ac     圧縮、解凍後にアーカイブ属性をクリアします。(Windows 版のみ)

            このスイッチを圧縮時に指定すると、圧縮が成功したファイルの
            「アーカイブ」属性をクリアします。
            解凍時に指定すると、解凍したファイルの「アーカイブ」属性を
            クリアします。


    -ad     解凍先パスに書庫名を追加します。

            このオプションは、複数の書庫を解凍するときに便利です。
            標準では、RAR は、すべての書庫を同じフォルダに解凍しますが、
            このスイッチは、各書庫ごとに別のフォルダを作成してファイルを
            解凍します。

            例:

            rar x -ad *.rar data\

            RAR は、'data' の下に書庫ごとのサブフォルダを作成します。


    -ag[format]
            現在の日時から書庫名を生成します。

            書庫を作成・処理するとき、書庫名に現在の日付を付加します。
            日々のバックアップに役立ちます。

            付加する文字の形式は、任意の"format"パラメータ、もしくは
            パラメータが省略された場合の"YYYYMMDDHHMMSS"で定義されます。
            フォーマット文字には以下の文字を含めることができます。

            Y   - 年
            M   - 月
            MMM - 月名 (Jan, Feb, など)
            W   - 週を表す数字（週の最初は月曜日です）
            A   - 曜日を表す数字（月曜日は１、日曜日は７）
            D   - 日
            E   - １年の何日目かを表す数字
            H   - 時
            M   - 分 (時の後にあれば分として扱われます)
            I   - 分 (時間の位置に関わらず分として扱われます)
            S   - 秒
            N   - 書庫番号
                  WinRAR は生成した名前で既存の書庫を検索します。
                  見つかった場合は、一意の名前を生成できるまで書庫番号を
                  増やします。
                  'N' 形式文字はボリュームを作成するときには使用できません。
                  解凍のような処理では、RARは最初の使用していない名前の前に
                  既存の書庫を選択するか、存在しない場合は N に1をセット
                  します。

            上にリストされた各フォーマット文字は、書庫名の1文字分を表します。
            例えば、WWは2桁の週の番号、YYYYは4桁の年を定義するために使います。

            フォーマット文字の先頭が '+' であるとき、日付と基本となる
            書庫名の位置は入れ替わって、書庫名の前に日付が位置付けられます。

            フォーマット文字列には、'{' と '}' で囲んだ任意のテキストを
            含めることができます。このテキストは書庫名に挿入されます。

            他のすべての文字は変更なく書庫名に付け加えられます。

            既存の書庫を処理する必要がある場合には、-ag スイッチは注意して
            使ってください。フォーマット文字列と、以前に -ag を使用してから
            経過した時間に依存して、生成された既存の書庫の名前が不適当に
            なる場合があります。このような場合、RAR は既存の書庫を処理する
            代わりに新しい書庫を作成するか新しい書庫を開きます。
            You may use
            -log switch to write the generated archive name to a file
            and then read it from file for further processing.

            例：

            1) デフォルトの YYYYMMDDHHMMSS フォーマットを使用します。

               rar a -ag backup

            2) DD-MMM-YY フォーマットを使用します。

               rar t -agDD-MMM-YY backup

            3) YYYYMMDDHHMM フォーマットを使用します。
               日付は backup の前にきます。

               rar a -ag+YYYYMMDDHHMM backup

            4) YYYY-WW-A フォーマットを使用します。項目の説明も付けます。

               rar a -agYYYY{year}-WW{week}-A{wday} backup

            5) YYYYMMDD フォーマットと書庫番号を使用します。
               1日に複数回 YYYYMMDD フォーマットマスクを使ったときにも
               一意の名前を生成することができます。

               rar a -agYYYYMMDD-NN backup


    -ai     ファイルの属性を無視します。

            このスイッチを解凍時に使用した場合、RARは解凍されたファイルに
            書庫に格納されていた全般的なファイル属性をセットしません。
            このスイッチは、オペレーティングシステムで新規作成したファイル
            に割り当てられる属性を保存します。

            Windows ではアーカイブ、システム、隠し、読取専用の各属性に、
            Unix では、user, group, 他のパーミッションに影響します。


    -ao     アーカイブ属性を持つファイルを圧縮します。(Windows 版のみ)

            例：

            ディスク C: のアーカイブ属性を持つすべてのファイルを
            f:backup に圧縮してアーカイブ属性をクリアします。

            rar a -r -ac -ao f:backup c:\*.*


    -ap     書庫内部のパスを設定します。このパスは、書庫にファイルを
            圧縮するときにはファイル名に結合され、書庫からファイルを
            解凍するときにはファイル名から取り除かれます。

            例えば、ファイル readme.txt を書庫 release のディレクトリ
            DOCS\ENG に圧縮するには次のように実行します。

            rar a -apDOCS\ENG release readme.txt

            カレントディレクトリに ENG を解凍するには

            rar x -apDOCS release DOCS\ENG\*.*


    -as     書庫の内容を同期させます。

            圧縮するときにこのスイッチが使われれば、圧縮するファイルの
            リストに存在しない書庫内のファイルは削除されます。
            書庫の内容と圧縮するディレクトリを同期させるために -u (更新) 
            と一緒にこのスイッチを使うと便利です。

            例えば、

            rar a -u -as backup sources\*.cpp

            書庫 backup.rar に sources ディレクトリの *.cpp ファイルだけ
            が圧縮され、他のすべてのファイルは書庫から削除されます。
            これは新しい書庫を作成するのに似ていますが、１つ重要な違いが
            あります。最後のバックアップから変更されたファイルが無ければ、
            この処理は新しい書庫を作成するよりずっと早く実行されます。


    -cfg-   設定ファイルとRAR環境変数を無視します。


    -cl     ファイル名を小文字に変換します。


    -cu     ファイル名を大文字に変換します。


    -c-     コメントを表示しません。


    -df     圧縮後にファイルを削除します。

            書庫にファイルを移動します。このスイッチを A コマンドと一緒に
            使用すると M コマンドと同じ動作になります。


    -dh     共有ファイルを開きます。

            他のアプリケーションが書き込み用に開いているファイルを処理
            することが可能です。

            このスイッチは、アプリケーションがファイルを読込可能に
            しているときに役に立ちますが、ファイルアクセスのすべての
            種類を禁止している場合は、ファイルを開くことはできません。

            このオプションは危険です。他のアプリケーションにより同時に
            更新されているファイルを圧縮することができるからです。
            このオプションは慎重に使用してください。


    -dr     圧縮後にファイルをゴミ箱に移動

            圧縮後にファイルをゴミ箱へ移動して削除します。
            Windows版でのみ利用できます。


    -ds     ソリッド書庫に圧縮するファイルをソートしません。


    -dw     圧縮後にファイルをワイプ消去

            圧縮後にファイルを削除します。削除後の復元ができない
            ように、削除の前にファイルデータを0で上書きします。

            ワイプ消去は普通のハードディスク用に設計されています。
            SSDのような複雑なデータアドレス指定を持つ技術では、最初の
            ファイルデータに上書きできないかもしれませんのでご注意ください。


    -ed     空のディレクトリを追加しません。

            このスイッチは作成した書庫に空のディレクトリが格納されない
            ことを示します。このような書庫を解凍するとき、WinRAR は、
            格納されているファイルのパスに基づいたフォルダを作成し、
            空のフォルダは作成しません。空のフォルダの情報は無くなります。
            空のフォルダの、名前を除いたすべての属性（アクセス権、
            ストリームなど）は無くなります。そのため、このスイッチは
            それらの情報を保存する必要がないときにだけ使ってください。

            -ed を 'm' コマンドか -df スイッチを組み合わせて使うと
            RARは空のディレクトリを削除しません。


    -ee     拡張属性を処理しません。

            ファイルの拡張属性を保存、復元しません。
            OS/2 版のみです。


    -en     [書庫の終了] ブロックを付加しません。

            RAR 5.0 書庫ではサポートされません。

            標準では、RAR は、新しい書庫や更新した書庫の終わりに、
            [書庫の終了] ブロックを付加します。これにより問題無く
            デジタル署名のような外部データを読み飛ばすことができますが、
            ある特殊な例では、この機能を無効にした方がよい場合もあります。
            例えば、書庫が信頼できないリンクを経由して２つのシステム間を
            転送され、同時に送り主が新しいファイルを追加するような場合、
            転送セッション間で、すでに受信したファイルが、他の書庫の終了
            によって修正されないとはっきりすることは重要になります。

            このスイッチはボリュームに使うことはできません。書庫の終了
            ブロックは、正しいボリューム処理に重要な情報を含んでいるから
            です。


    -ep     名前からパスを除外します。このスイッチはパス情報を含めずに
            ファイルを書庫に圧縮できるようにします。これは複数のファイル
            が同じ名前で存在する結果になるかもしれません。


    -ep1    名前からベースディレクトリを除外します。コマンドラインで入力
            されたパスを格納しません。

            例：

            ディレクトリ tmp のすべてのファイルとディレクトリを書庫 test
            に圧縮します。しかし、圧縮したファイルにパス情報 tmp\ は含まれ
            ません。

            rar a -ep1 -r test tmp\*

            これはこのコマンドと等しいです。

            cd tmp
            rar a -r ..\test
            cd ..


    -ep2    フルパスを展開します。圧縮時にファイルのフルパスを格納します。
           （ドライブレターと先頭の \ は除きます）


    -ep3    ドライブレターを含むフルパスを展開します。
            Windows 版のみです。

            このスイッチを圧縮時に使うとドライブレターを含む
            フルパスを格納します。ドライブセパレータ : （コロン）は
             _ （アンダースコア）に置き換えられます。

            -ep3 を解凍時に使うと、アンダースコアをコロンに戻して、
            元のディレクトリとドライブにファイルを解凍します。
            解凍先パスを指定しても無視されます。

            また、圧縮時に UNC パスの \\server\share から __server\share
            に変換したり、解凍時に元の状態にファイルを復元するのにも
            使用します。

            このスイッチは同じ書庫に複数のディスクのバックアップを
            取るのに役立ちます。
            例えば次のように実行するとバックアップを作成できます。

            rar a -ep3 -r backup.rar c:\ d:\ e:\

            それを復元します。

            rar x -ep3 backup.rar

            書庫に悪意のあるファイルがないことを完全に確認してから、
            慎重に、-ep3 を使ってください。
            言い換えると、あなた自身か、完全に信用できる人が書庫の
            作成者である場合に使ってください。このスイッチは、
            コンピュータの重要なシステムファイルを含む、どこにある
            どんなファイルでも上書きすることができます。通常は
            バックアップと復元だけを目的に使用するべきです。


    -e[+]<attr>
            除外または対象とするファイルの属性を指定します。

            <attr> の形式は10進数、8進数（先頭に'0'を付けます）、16進数
           （先頭に'0x'を付けます）です。

            デフォルトでは <attr> の前に'+'がなく、このスイッチで定義された
            マスクは除外されます。そのため、<attr> とファイル属性のANDビット
            演算の結果が0でなければ、ファイルは処理されません。

            '+' がある場合には含めるファイルのマスクを指定したことになります。
            マスクで指定された属性の少なくとも1つを持つファイルだけが処理
            されます。

            Windows版では、ディレクトリとファイルの属性であるシステム・隠し
            ・アーカイブ・読取専用を表す数字のマスクの代わりに、シンボル
            D, S, H, A, R を使用することができます。属性を指定する順番は
            関係ありません。

            コマンドラインで-e<attr>と-e+<attr>を同時に指定することもできます。

            例:

            1) フォルダだけを圧縮してファイルは含めません。

               rar a -r -e+d dirs

            2) システムファイルと隠しファイルは圧縮しません。

               rar a -esh files

            3) 読取専用ファイルは解凍しません。

               rar x -er files


    -f      ファイルを最新にします。書庫の解凍と作成で使うことができ
            ます。コマンド列 "a -f" は、コマンド f に相当します。
            コマンド m と mf でスイッチ -f を使うことができます。
            スイッチ -f をコマンド x、e で使った場合、古いファイル
            だけが書庫から解凍されたファイルで置き換えられます。


    -hp[p]  ファイルヘッダも暗号化します。

            このスイッチは、-p[p] に似ています。しかし、-p はファイル
            データのみを暗号化してファイル名のような情報は見えるままに
            なっています。このスイッチは、ファイルのデータだけではなく、
            ファイル名、サイズ、属性、コメントなどのような機密に関わる
            他の情報も暗号化するので、より高いセキュリティレベルを提供
            します。-hp で暗号化された書庫は、パスワードを入力しないと
            ファイル名を見ることさえできません。

            例:

            rar a -hpfGzq5yKw secret report.txt

            パスワード 'fGzq5yKw' を使って、ファイル report.txt を
            暗号化書庫 secret.rar に圧縮します。


    -ht[b|c]
            Select hash type [BLAKE2,CRC32] for file checksum.

            File data integrity in RAR archive is protected by checksums
            calculated and stored for every archived file.

            By default, RAR uses CRC32 function to calculate the checksum.
            RAR 5.0 archive format also allows to select BLAKE2sp hash
            function instead of CRC32.

            Specify -htb switch for BLAKE2sp and -htc for CRC32 hash function.
            Since CRC32 is the default algorithm, you may need -htc only to
            override -htb in RAR configuration.

            CRC32 output is 32 bit length. While CRC32 properties are
            suitable to detect most of unintentional data errors,
            it is not reliable enough to verify file data identity.
            In other words, if two files have the same CRC32,
            it does not guarantee that file contents is the same.

            BLAKE2sp output is 256 bit. Being a cryptographically strong
            hash function, it practically guarantees that if two files
            have the same value of BLAKE2sp, their contents is the same.
            BLAKE2sp error detection property is also more reliable than
            in shorter CRC32.
            
            Since BLAKE2sp output is longer, resulting archive is
            slightly larger for -htb switch.

            If archive headers are unencrypted (no switch -hp), checksums
            for encrypted RAR 5.0 files are modified using a special
            password dependent algorithm, to make impossible guessing
            file contents based on checksums. Do not expect such encrypted
            file checksums to match usual CRC32 and BLAKE2sp values.
            
            This switch is supported only by RAR 5.0 format, so you
            need to use -ma switch with it.

            You can see checksums of archived files using 'vt' or 'lt'
            commands.
    

            Example:

            rar a -ma -htb lists.rar *.lst

            will add *.lst to lists.rar using BLAKE2sp for file checksums.


    -id[c,d,p,q]
            メッセージを表示しません。

            スイッチ -idc は著作権表示を表示しません。

            スイッチ -idd は処理完了時に "Done" を表示しません。

            スイッチ -idp はパーセントインジケータを表示しません。

            スイッチ -idq はサイレントモードになり、エラーメッセージと質問
            だけが表示されます。

            スイッチ -dcdp のように同時に複数の修飾子を使用することができます。


    -ieml[.][addr]
            書庫をメール送信します。Windows 版のみです。

            作成、更新した書庫をメールに添付します。
            このスイッチを使うためには MAPI に対応したメールソフトが
            インストールされている必要があります。

            送信先メールアドレスはスイッチに直接指定するか、空白にすること
            ができます。空白にした場合は、メールプログラムで指定します。
            カンマやセミコロンで区切ることで、複数のアドレスを指定すること
            ができます。

            -ieml に "." （ドット） を付加した場合は、メールに正しく添付
            された後、書庫は削除されます。

            マルチボリュームを作成するときにこのスイッチを使った場合は、
            各ボリュームはそれぞれ別のメールに添付されます。


    -ierr   すべてのメッセージを標準出力に出力します。


    -ilog[name]
            エラーログをファイルにします (登録版のみ)。

            エラーメッセージをrar.logファイルに書き出します。
            省略可能な 'name' パラメータが指定されていない場合には、
            以下のデフォルトパスに作成されます。

            Unix:    ユーザーホームディレクトリに .rarlog
            Windows: %APPDATA%\WinRAR ディレクトリに rar.log

            'name' パラメータのファイル名にパスが指定されていなければ、
            RARは上のデフォルトパスに指定した名前のログファイルを作成します。
            ログファイルの場所を変更したい場合は、'name' パラメータに
            パスとファイル名を指定してください。

            デフォルトでは、ログファイルは UTF-16 リトルエンディアン
            エンコーディングを使用します。
            しかし、-sc<charset>g スイッチでエンコーディングを変更できます。

            例:

            rar a -ilogc:\log\backup.log backup d:\docs

            エラー時に c:\log\backup.log にログファイルが作成されます。


    -inul   すべてのメッセージを出力しません。


    -ioff   処理が完了した後に PC の電源をオフにします。
            ハードウェアが電源断の機能をサポートしている必要があります。
            Windows だけでサポートされています。


    -isnd   サウンドを出力します。


    -k      書庫をロックします。

            書庫を変更するすべてのコマンドが無視されるようになります。


    -kb     解凍時に壊れたファイルを残します。

            RAR はデフォルトで解凍後にチェックサムエラーのファイルは削除します。
            スイッチ -kb を指定するとチェックサムエラーのファイルを削除しません。


    -log[fmt][=name]
            Write names to log file.

            This switch allows to write archive and file names to specified
            text file in archiving, extracting, deleting and listing commands.
            Its behavior is defined by 'fmt' string, which can include one
            or more of following characters:

            A - write archive names to log file. If RAR creates or processes
                volumes, all volume names are logged.

            F - write processed file names to log file. It includes
                files added to archive and extracted, deleted or listed
                files inside of archive.

            P - if log file with specified name is exist, append data
                to existing file instead of creating a new one.

            U - write data in Unicode format.

            If neither 'A' nor 'F' are specified, 'A' is assumed.

            'name' parameter allows to specify the name of log file.
            It must be separated from 'fmt' string by '=' character.
            If 'name' is not present, RAR will use the default rarinfo.log
            file name.

            It is allowed to specify several -log switches in the same
            command line.

            This switch can be particularly useful, when you need to process
            an archive created with -ag or -v switches in a batch script.
            You can specify -loga=arcname.txt when creating an archive
            and then read an archive name generated by RAR from arcname.txt
            with an appropriate command. For example, in Windows batch file
            it can be: set /p name=<arcname.txt.

            Examples:

            1) write names of created volumes to vollist.txt:

               rar a -v100m -loga=vollist.txt volume.rar c:\data

            2) write the generated archive name to backup.txt in Unicode:

               rar a -ag -logau=backup.txt backup.rar myfiles\*

            3) write names of tested volumes to vollist.txt and names
               of tested archived files inside of volumes to filelist.txt:

               rar t -log=vollist.txt -logf=filelist.txt volume.part01.rar


    -m<n>   圧縮方法を指定します。

       -m0   無圧縮    書庫に格納するときに圧縮しません
       -m1   最速      最も速い方法を使用します（圧縮率は低下します）
       -m2   速度重視  速度重視の方法を使用します
       -m3   標準      標準の圧縮方法を使用します（デフォルト）
       -m4   圧縮重視  圧縮率を重視した方法を使用します
                       （圧縮率が高くなります。しかし遅いです）
       -m5   最高圧縮  最も圧縮率が高まる圧縮方法を使用します
                       （さらに少し圧縮率が高くなります。
                         しかし最も遅くなります）

            このスイッチを指定しない場合は、RAR は -m3 を使用します
            (標準圧縮)。


    -ma[4|5]
            書庫形式のバージョンを指定します。

            デフォルトでは、RAR はRAR 4.x 形式で書庫を作成します。
            -ma5 か -ma で RAR 5.0 書庫を作成します。
            -ma4 は、設定に -ma5 が保存されていて、それを上書きして
            RAR 4.x 形式で作成するときに使用してください。

            このスイッチは、新規書庫を作成するときのみ使用されます。
            既存の書庫を更新するときには無視されます。


    -mc<par>
            高度な圧縮パラメータを指定します。

            このスイッチは主にベンチマークや実験のためにあり、実際の環境
            では RAR が自動的に選択した最適なパラメータを使った方がいい
            です。このスイッチを誤って使うと、非常に深刻なパフォーマンスと
            圧縮率の低下につながる恐れがありますので注意してください。
            そのため、このパラメータは、何を行うかをはっきりと理解したとき
            のみ使ってください。

            文法は以下の通りです。

            -mc[param1][:param2][module][+ or -]

            <module> には圧縮アルゴリズムを示す 1 文字が入って構成されます。

            以下の値が入ります。

              A       - オーディオ圧縮
              C       - フルカラー (RGB) データ圧縮
              D       - デルタ圧縮
              E       - 32ビット x86 実行形式圧縮
              I       - 64ビット インテル Itanium 実行形式圧縮
              T       - テキスト圧縮

            RAR 5.0 書庫形式では D, E のみサポートされます。

            スイッチの終わりの '+' は選択したアルゴリズムモジュールを処理
            するすべてのデータに適用します。'-' は、すべてにモジュールを
            無効にします。符号を指定しない場合は、RAR はデータと圧縮方法
            に基づいて自動的にモジュールを選択します。

            -mc- スイッチはすべてのオプションモジュールを無効にして、
            一般的な圧縮アルゴリズムのみを使用します。

            <Param1> と <Param2> モジュールは以下のパラメータに依存します。

            オーディオ圧縮, デルタ圧縮

            <Param1> バイトチャンネルの数です。1 から 31 までを入力できます。
            RAR はマルチバイトチャンネルをバイトに分割します。例えば、
            2 つの 16 ビットオーディオチャンネルは、 RAR に 1 バイトごとの
            4 つのチャンネルとみなされます。

            <Param2> は無視されます。


            32ビット x86 インテル実行形式圧縮
            64ビットインテル Itanium 実行形式圧縮
            フルカラー (RGB) データ圧縮

            <Param1> と <Param2> は無視されます。


            テキスト圧縮

            Text compression algorithm provides noticeably higher compression
            on plain text data. But it cannot utilize several CPU cores
            efficiently resulting in slower compression time comparing to
            general algorithm in multicore and multiprocessor environment.
            Also its decompression speed is much slower than in general
            algorithm regardless of CPU cores number. This is why 
            the text compression is disabled by default. You can specify
            -mct switch to allow RAR to select this algorithm automatically
            for suitable data. Switch -mct+ will force use of the text
            compression for all data.
            
            Switch -mct can also include <Param1> and <Param2>, so its
            full syntax is -mc[param1][:param2]t[+ or -].

            <Param1> は PPM アルゴリズムの予測次数です。2 から 63 までを
            入力できます。
            PPM のための十分なメモリが利用できれば、通常、より高い値は
            冗長なデータの圧縮率をわずかに高めます。メモリが十分でない場合
            は、効果はあがりません。より高い次数値は、圧縮と解凍の速度を
            遅くします。

            <Param2> は PPM に割り当てるメガバイト単位のメモリです。
            1 から 128 までを入力できます。
            より大きい値は、圧縮率を高めますが、PPM は圧縮と解凍に同じだけ
            メモリサイズを使用します。そのため、書庫の作成時に多すぎる
            メモリを割り当ててしまった場合は、他の人がその書庫をメモリが
            少ないコンピュータで解凍するときに解凍できない場合があります。
            解凍は仮想メモリを使用することもできますが、非常に遅くなるかも
            しれません。


            例:

            1) スイッチ -mc1a+ はすべてのデータに 8ビットのモノ
               オーディオ圧縮を使用させます。

            2) スイッチ -mc10:40t+ はすべてのデータにテキスト圧縮を
               使用させます。圧縮次数は 10、メモリは 40 MB 割り当てます。

            3) スイッチ -mc12t はテキスト圧縮を使用するときに、圧縮次数
               12 を設定します。しかし、それをいつ使用するかは WinRAR に
               任せます。

            4) スイッチ -mct- -mcd- は適切なデータにテキスト圧縮することと
               デルタ圧縮を無効にすることを許します。


    -md<n>[k,m,g]
            辞書サイズを選択します。

            スライド辞書は圧縮アルゴリズムが繰り返されたデータパターンを
            検索して圧縮するのに使用されるメモリー領域です。
            圧縮するファイルのサイズ（またはソリッド書庫の場合は合計サイズ）
            が辞書サイズより大きい場合は、辞書サイズを増やすことは圧縮率を
            高め、圧縮速度を遅め、メモリの必要さいずを増やします。

            RAR 4.x 書庫形式では以下の辞書サイズが指定できます。
            64 KB, 128 KB, 256 KB, 512 KB, 1 MB, 2 MB, 4 MB

            RAR 5.0 書庫形式では以下の辞書サイズが指定できます。
            128 KB, 256 KB, 512 KB, 1 MB, 2 MB, 4 MB, 8 MB, 16 MB,
            32 MB, 64 MB, 128 MB, 256 MB, 512 MB, 1 GB

            サイズは、KB, MB, GB の代わりに 'k', 'm', 'g' 識別子を
            使用できます。64 MB は -md64m で指定します。
            識別子が指定されない場合は MB とみなします。
            そのため、-md64m と -md64 は同じです。

            圧縮時、RAR は指定した辞書サイズの約6倍のメモリーを必要と
            します。そのため、512 MB と 1 GB は、64ビット版 RAR 専用です。
            解凍時、辞書サイズよりわずかに大きいサイズを割り当てます。
            そのため、32ビット版でも64ビット版でも 1 GBまでのすべての
            辞書サイズの書庫を解凍することができます。

            RAR は、辞書サイズが圧縮元データのサイズより非常に大きければ、
            辞書サイズを減らすことができます。これは圧縮を低下させずに
            必要なメモリを減らすのに役立ちます。


            RAR のスライド辞書の標準サイズは RAR 4.x では 4 MB です。
            RAR 5.0 では 32 MB です。

            例:

            RAR a -s -ma -md128 lib *.dll

            RAR 5.0 形式で 128 MB の辞書を使ってソリッド書庫を作成します。


    -ms[list]
            圧縮しないファイルの種類を指定します。

            圧縮しないで格納するだけのファイルを指定します。
            このスイッチは、すでに圧縮されているファイルにも使用すること
            ができ、目立った圧縮率の低下なしに、圧縮速度を速めるのに
            役立ちます。

            オプションの <list> パラメータには ';' （セミコロン）でつなげて
            ファイル拡張子のリストを定義します。例えば、-msrar;zip;jpg は、
            RAR に RAR, ZIP 書庫と JPG イメージを圧縮しないで格納するように
            強制します。リストには、-ms*.rar;*.zip;*.jpg のようにワイルド
            カードでファイルマスクを指定することもできます。

            Several -ms switches are permitted, such as -msrar -mszip
            instead of -msrar;zip.

            In Unix -ms switch containing several file types needs to be
            enclosed in quote marks. It protects semicolons from processing
            by Unix shell. Another solution is to use individual -ms<type>
            switches for every file type.

            <list> が指定されない場合、-ms スイッチはデフォルトの以下の
            ような拡張子を使用します。

            7z, ace, arj, bz2, cab, gz, jpeg, jpg, lha, lzh, mp3,
            rar, taz, tgz, xz, z, zip


    -mt<threads>
            スレッドの数をセットします。

            <threads> パラメータは 1 から 32 までを指定できます。
            これは圧縮アルゴリズムや、他のRARモジュールが開始できる
            複数のスレッドで、アクティブになることができるスレッドの
            推奨される最大数を定義します。
            RARがこの推奨値を指定されていても、スレッドの実数が指定値を
            上回ることがあります。

            <threads> パラメータを変更すると圧縮率に若干影響があります。
            そのため、すべての圧縮設定が同じであっても-mtスイッチが
            異なっていると必ずしも同じサイズにはならない場合があります。

            -mt スイッチを指定しないと、RARはプロセッサの数を検出して
            自動的に最適なスレッドの数を選択します。


    -n<f>   含めるファイルの追加のフィルター。

            含めるファイルリストへの追加のフィルターとしてマスクを適用
            します。
            ワイルドカードが名前とファイルマスクのファイル部分で使えます。
            スイッチ '-n' は複数回指定できます。

            このスイッチは通常のファイルマスクを置き換えるものではなく、
            処理するファイルはコマンドラインで入力する必要があります。
            '-n'スイッチは、処理するファイルを指定したマスクに一致する
            ファイルだけに制限するための追加フィルタです。コマンドライン
            を短くするのに役立ちます。

            例えば、ProjectフォルダとInfoフォルダにあるすべての*.txtファイル
            と*.lstファイルを圧縮したい場合には、次のように入力できます。

            rar a -r text Project\*.txt Project\*.lst Info\*.txt Info\*.lst

            '-n' スイッチを使って、このようにできます。

            rar a -r -n*.txt -n*.lst text Project Info


    -n@<lf> リストファイルから追加のフィルターマスクを読み込む

            -n<file> スイッチに似ています。しかし、処理のファイルマスク
            はリストファイルから読み込みます。
            リストファイルパラメータを指定しないで-n@を使った場合は、
            フィルターマスクは stdin(標準入力) から読み込みます。

            例:

            rar a -r -n@inclist.txt text Project Info


    -oc     NTFS 圧縮属性をセットします。Windows 版のみです。

            このスイッチは、ファイルを解凍するときに NTFS 圧縮属性を
            復元します。RAR は、書庫作成時に常に圧縮属性を保存しますが、
            -oc スイッチを指定しない場合には、圧縮属性を復元しません。 

    -oh     Save hard links as the link instead of the file.

            If archiving files include several hard links, store the first
            archived hard link as usual file and the rest of hard links
            in the same set as links to this first file. When extracting
            such files, RAR will create hard links instead of usual files.

            You must not delete or rename the first hard link in archive
            after the archive was created, because it will make extraction
            of following links impossible. If you modify the first link,
            all following links will also have the modified contents
            after extracting. Extraction command must involve the first
            hard link to create following hard links successfully.
    
            This switch is supported only by RAR 5.0 format,
            so you need to use -ma switch with it.

    -oi[0-4][:<minsize>]
            Save identical files as references.

            Switch -oi0 (or just -oi-) turns off identical file processing,
            so such files are compressed as usual files. It can be used to
            override another -oi value stored in RAR configuration.

            If -oi1 (or just -oi) is specified, RAR analyzes the file
            contents before starting archiving. If several identical files
            are found, the first file in the set is saved as usual file
            and all following files are saved as references to this first
            file. It allows to reduce the archive size, but applies some
            restrictions to resulting archive. You must not delete or rename
            the first identical file in archive after the archive was
            created, because it will make extraction of following files
            using it as a reference impossible. If you modify the first file,
            following files will also have the modified contents
            after extracting. Extraction command must involve the first file
            to create following files successfully.

            It is recommended to use -oi only if you compress a lot of
            identical files, will not modify an archive later and will
            extract an archive entirely, without necessity to unpack or skip
            individual files. If all identical files are small enough to
            fit into compression dictionary specified with -md<n> switch,
            switch -s can provide more flexible solution than -oi.

            Switch -oi2 is similar to -oi1, with the only difference:
            it will display names of found identical files before starting
            archiving.

            Switches -oi3 and -oi4 allow to utilize RAR to generate
            lists of identical files. Though you still need to provide
            a dummy archive name to make the command syntax valid,
            in this mode an archive is not created and nothing is compressed.
            If -oi3 is used, file sizes and names are displayed
            and every identical file group is separated with empty line.
            Switch -oi4 displays bare file names and skips the first
            identical file in every file group, so only duplicates
            are listed.

            Optional <minsize> value allows to define the minimum file size
            threshold. Files smaller than <minsize> are not analyzed
            and not considered as identical. If this parameter is not
            present, it is assumed to be 64 KB by default. Selecting
            too small <minsize> may increase the time required to detect
            identical files.
    
            Switches -oi1 and -oi2 are supported only by RAR 5.0 format,
            so you need to use -ma switch with it.

            Examples:

            1) rar a -oi -ma archive

            Save contents of current directory to archive.rar.
            Store identical files as references.

            2) rar a -oi3:1000000 -r dummy c:\photo\*.jpg

            List all duplicate *.jpg files lather than 1000000 bytes
            found in c:\photo and its subdirectories.


    -ol     ファイルの代わりにシンボリックリンクを関連付けて保存します。

            Save symbolic links as links, so file contents is not archived.
            In Windows version it also saves reparse points as links.
            Such archive entries are restored as symbolic links
            or reparse points when extracting.

            Supported both for RAR 4.x and RAR 5.0 archives in RAR for Unix
            and only for RAR 5.0 archives in RAR for Windows.

            In Windows you may need to run RAR as administrator to create
            symbolic links when extracting.


    -or     同じ名前のファイルがすでに存在するときに自動的に名前を変更
            して解凍できます。ファイル名は'filename(N).txt'のように変更
            されます。'filename.txt'は元のファイル名で、'N'は1から始まる
            数字です。同じ名前で存在する場合には数字を増やします。


    -os     NTFS ストリームを格納します。Windows 版のみです。

            このスイッチはNTFSファイルシステムのみに意味を持っており、
            ファイルに関連付けられた新しいデータストリームを保存することが
            できます。
            圧縮時、代替ストリームのデータを格納するソフトウェアを
            使用していて、これらのストリームを保ちたいのであれば、
            このスイッチを指定する必要があります。

            NTFSの暗号化されたファイルのストリームは保存されません。


    -ow     圧縮時にはファイルセキュリティ情報を保存し、解凍時にはそれを
            復元します。

            Unix 版 では、このスイッチで、ファイルの所有者とグループを
            保存します。

            Windows 版では、所有者、グループ、ファイルのパーミッション、
            監査情報を保管します。しかしこれは、あなたがこれらを読むのに
            必要な権限を持っているときに限ります。NTFS ファイルシステム
            だけが、Windows 上のセキュリティに基づいたファイルをサポート
            していることに注意してください。


    -o[+|-] 上書きモードを指定します。解凍時と書庫の更新時に使用されます。
            以下のモードがあります。

              -o           上書き前に質問します。
                           (解凍時のデフォルト)

              -o+          存在するファイルを上書きします。
                           (書庫の更新時のデフォルト)

              -o-          存在するファイルを上書きしません。


    -p[p]   圧縮時に文字列 <p> をパスワードとしてファイルを暗号化します。
            パスワードは大文字と小文字を区別します。コマンドラインで、
            パスワードを省略した場合は、"Enter password"とメッセージが
            表示され、入力を求められます。

            例：

            rar a -pmyhoney secret1 *.txt

            パスワード "myhoney" で *.txt を暗号化しながら圧縮します。


    -p-     パスワードを問い合わせません。

            暗号化したファイルを解凍する際にパスワードを問い合わせません。
            暗号化されたファイルを解凍する際に、無効なパスワードのために
            表示されるプロンプトを抑え、RAR に 'incorrect password'
            メッセージを出すことを強制できます。
            このスイッチはパスワードとして '-' をセットします。


    -qo[-|+]
            Add quick open information [none|force]

            RAR archives store every file header containing information
            such as file name, time, size and attributes immediately
            before data of described file. This approach is more damage
            resistant than storing all file headers in a single continuous
            block, which if broken or truncated would destroy the entire
            archive contents. But while being more reliable, such file
            headers scattered around the entire archive are slower to
            access if we need to quickly open the archive contents 
            in a shell like WinRAR graphical interface.

            To improve archive open speed and still not make the entire
            archive dependent on a single damaged block, RAR 5.0 archives
            can include an optional quick open record. Such record is
            added to the end of archive and contains copies of file names
            and other file information stored in a single continuous block
            additionaly to normal file headers inside of archive.
            Since the block is continuous, its contents can be read quickly,
            without necessity to perform a lot of disk seek operations.
            Every file header in this block is protected with a checksum.
            If RAR detects that quick open information is damaged,
            it resorts to reading individual headers from inside of archive,
            so damage resistance is not lessened.

            Quick open record contains the full copy of file header,
            which may be several tens or hundreds of bytes per file,
            increasing the archive size by the same amount. This size
            increase is most noticeable for many small files, when file
            data size is comparable to file header. So by default,
            if no -qo is specified or -qo without parameter is used,
            RAR stores copies of headers only for relatively large files
            and continues to use local headers for smaller files.
            Concrete file size threshold can depend on RAR version.
            Such approach provides a reasonable open speed to archive size
            tradeoff. If you prefer to have the maximum archive open speed
            regardless of size, you can use -qo+ to store copies of all
            file headers. If you need to have the smallest possible archive
            and do not care about archive open speed in different programs,
            specify -qo- to exclude the quick open information completely.

            If you wish to measure the performance effect of this switch,
            be sure that archive contents is not stored in a disk cache.
            No real disk seeks are performed for cached archive file,
            making access to file headers fast even without quick open
            record.


    -r      サブディレクトリを再帰的に処理します。以下のコマンドで使用
            できます。
            a, u, f, m, x, e, t, p, v, l, c, cf, s

            コマンド a, u, f, m で使用した場合、カレントディレクトリ
            と同様にすべてのサブディレクトリのファイルを処理します。

            コマンド x, e, t, p, v, l, c, cf, s で使用した場合、
            カレントディレクトリと同様にすべてのサブディレクトリの書庫を
            処理します。


    -r-     再帰を無効にします。

            -r スイッチがなくても、いくつかのケースではRARは自動的に
            再帰します。スイッチ -r- はそれを禁止します。

            圧縮時にワイルドカードを含まないディレクトリ名を指定した
            場合、デフォルトでは -r スイッチを指定していなくても
            RARはディレクトリの内容を追加します。同様に、ワイルド
            カードがないディスクルートをファイルマスクとして指定しても
            RARは自動的に再帰します。スイッチ -r- はこれも禁止します。
            
            例:
            
            rar a -r- arc dirname
            
            このコマンドは空の dirname ディレクトリだけを追加して、
            フォルダに含まれる内容は無視します。
            
            rar a -r- arc c:\
            
            c:\ ディレクトリのルートの内容だけを圧縮します。
            サブディレクトリには再帰しません。


    -r0     -r に似ています。しかし、コマンド a, u, f, m で使用した
            場合、ワイルドカード文字 *, ? で含まれている名前の
            サブディレクトリのみを処理します。

            このスイッチはファイル名にだけ動作します。'dirname'  のような
            ファイル名パートを持たないディレクトリ名は -r0 の影響を受け
            ません。そしてこれらの内容は -r- スイッチを指定しない限り
            書庫に完全に加えられます。

            例:

            rar a -r0 docs.rar *.doc readme.txt

            カレントディレクトリとサブディレクトリの *.doc ファイルと
            カレントディレクトリの readme.txt を docs.rar 書庫に圧縮します。
            通常の -r スイッチでは、RARは readme.txt をサブディレクトリ
            からも検索します。


    -ri<p>[:<s>]
            優先度とスリープタイムを設定します。Windows 版のみで有効です。
            このスイッチは、マルチタスク環境でのRARのシステム負荷を調節する
            ために使用します。<p> に指定できるタスク優先度は 0 - 15 です。
 
            <p> を 0 にした場合は、RAR はデフォルトのタスク優先度を使用
            します。<p>に1をセットすると最も低い優先度になり、15をセット
            すると最も高い優先度になります。

            スリープタイム <s> は 0 - 1000 (ミリ秒)の値です。これは、
            圧縮中や解凍中に読み込みまたは書き込み処理を行うたびに、RAR が
            システムに返す時間です。<s> を0以外にすると、システム負荷を
            より減らす必要があるときに、圧縮時の<p>パラメータよりも役立つ
            かもしれません。

            例：

            デフォルト優先度と10msのスリープタイムで RAR を実行します。

            rar a -ri0:10 backup *.*


    -rr[N]  リカバリレコードを付加します。このスイッチは、書庫の作成や更新
            のときに書庫にデータリカバリレコードを付加するときに使います。
            詳細は rr[N] コマンドの説明をご覧ください。


    -rv[N]  リカバリボリュームを作成します。このスイッチは、マルチ
            ボリューム書庫を作成するときに、リカバリボリュームを生成
            するのに使います。
            詳細は 'rv[N]' コマンドの説明を参照してください。


    -s      ソリッド書庫を作成します。ソリッド書庫は、複数またはすべての
            ファイルを１つの連続的なデータストリームとして扱って書庫に
            格納する特別な圧縮方法で作成された書庫です。

            ソリッド圧縮は多数の小さなファイルや似たファイルを圧縮する際に
            圧縮率を向上させます。しかし、以下のような重要な不利な点があり
            ます。
            1. 既存のソリッド書庫の更新は遅くなります。
            2. 個別のファイルへのアクセスは遅くなります。
            3. ファイルが壊れたときに復旧しづらいことがあります。

            通常、ソリッド書庫に格納されるファイルは拡張子によりソートされ
            ます。
            しかし、-ds スイッチでソートさせないことや、rarfiles.lst と
            いう特別なファイルでファイルの順を設定することができます。

            例：

            512 KB の辞書でソリッド書庫 sources.rar を作成します。
            カレントディレクトリから再帰して、すべてのディレクトリの .asm 
            ファイルだけを圧縮しています。

            rar a -s -md512 sources.rar *.asm -r


    -s<N>   ファイル数ごとにグループ化したソリッド書庫を作成します。

            -s に似ています。しかし <N> ファイルを圧縮した後で、ソリッド
            の統計はリセットされます。通常圧縮を低下させますが、ソリッド
            書庫が壊れた場合に被害も低下させます。


    -sc<charset>[objects]
            リストファイル、ログファイル、書庫コメントファイルの
            文字セットを指定します。

            'Charset' パラメータは必須で、以下の値の1個が入ります。

              U - Unicode
              A - シングルバイトのANSI (Windows) エンコーディング (Windows 版のみ)
              O - OEM (DOS) エンコーディング (Windows 版のみ)

            Unicode形式のファイルは最初にFFFEかFEFFのUnicode文字を
            持たなければなりません。そうでなければRARはこのスイッチを
            無視してファイルをASCIIテキストとして処理します。

            'Objects' パラメータは省略可能で、以下の値の1個が入ります。

              G - -ilog switch スイッチで作成できるログファイル
              L - リストファイル
              C - コメントファイル

            対象は -scolc の様に複数指定することもできます。
            'objects' パラメータを省略した場合は、'charset' はすべての
            対象に適用されます。

            このスイッチで、-z[file]スイッチのファイルとリストファイルと
            "cw" コマンドで出力するコメントファイルの文字セットを指定する
            ことができます。

            例:

            1) rar a -scol data @list

            OEM エンコーディングを使用して 'list' に含まれる名前を読みます。

            2) rar c -scuc -zcomment.txt data

            Unicode ファイルとして comment.txt を読みます。

            3) rar cw -scuc data comment.txt

            Unicode ファイルとして comment.txt を書き出します。


    -se     拡張子ごとにグループ化したソリッド書庫を作成します。

            -s に似ています。しかし拡張子が変わるたびにソリッドの統計は
            リセットされます。通常圧縮を低下させますが、ソリッド書庫が
            壊れた場合に被害も低下させます。


    -sfx[name]
            自己解凍書庫を作成します。このスイッチを新しい書庫を作成する
            ときに使用した場合、自己解凍書庫（default.sfx か、スイッチで
            指定したモジュールを使用します）を作成します。
            Windows 版の default.sfx は、rar.exe と同じディレクトリに、
            Unix では、ユーザーのホームディレクトリか、/usr/lib か
            /usr/local/lib に置く必要があります。

            例：

            rar a -sfxwincon.sfx myinst

            自己解凍モジュール wincon.sfx を使って自己解凍書庫を作成し
            ます。


    -si[name]
            書庫の作成時に、stdin (標準入力)からデータを読み込みます。
            オプションの 'name' パラメータは、作成する書庫に圧縮する
            入力データのファイル名を指定することができます。
            このパラメータが省略された場合は、名前は 'stdin' になります。
            このスイッチは -v と同時に使うことはできません。

            例:

            type Tree.Far | rar a -siTree.Far tree.rar

           'type Tree.Far' を圧縮して 'Tree.Far' として出力します。


    -sl<size>
            このスイッチの <size> パラメータで指定したサイズより小さい
            サイズのファイルのみを処理します。
            <size> パラメータはバイト単位で指定してください。


    -sm<size>
            このスイッチの <size> パラメータで指定したサイズより大きい
            サイズのファイルのみを処理します。
            <size> パラメータはバイト単位で指定してください。


    -sv     独立したソリッドボリュームを作成します。

            RAR はデフォルトで、新しいボリュームが始まると可能な限り
            早くソリッドの統計をリセットします。ただし、前回のリセット
            から充分なデータ（すくなくとも２，３メガバイト）をパック
            してからです。

            このスイッチは、RAR が圧縮するデータサイズを無視して、
            ボリュームがどのようなサイズでも統計をリセットすることを
            強制します。これは圧縮を低下させますが、ソリッドボリュームの
            １つを喪失したり壊れたりしたときに、データの一部を解凍する
            機会を増やします。

            このスイッチを使用しても RAR が統計をリセットすることが
            できないことがあることに注意してください。例えば、１つの
            大きいファイルをいくつかのボリュームに分けて圧縮するとき
            などです。RAR はファイルとファイルの間でソリッドの統計を
            リセットすることはできますが１つのファイルの中ではリセット
            することができません。

            ボリュームでない書庫を作成するときには無視されます。


    -sv-    独立していないソリッドボリュームを作成します。

            ボリューム間のソリッドの統計をリセットするのを無効にします。

            これはわずかに圧縮を高めますが、ソリッドボリュームセットの
            １つのボリュームを失ったり壊れたりした場合に、データを
            解凍するチャンスを非常に減らします。

            ボリュームでない書庫を作成するときには無視されます。


    -s-     ソリッド圧縮をしません。


    -t      圧縮後にファイルをテストします。このスイッチは move コマンドと
            組み合わせると特に役に立ちます。この場合、書庫のテストが成功
            したときだけ、ファイルは削除されます。


    -ta<date>
            指定した日付よりも後に修正したファイルだけを処理します。

            日付文字列の形式は YYYYMMDDHHMMSS です。
            '-'や':'のセパレータを入れることおよび後方を省略することが
            できます。例えば、次のスイッチ -ta2001-11-20 は正しいです。
            これは内部で 「-ta20011120000000」 に展開されて
            「2001年11月20日の0時0分0秒より後に修正したファイル」
            とみなされます。


    -tb<date>
            指定した日付よりも前に修正したファイルのみを処理します。
            日付文字列の形式は -ta<date> と同じです。


    -tk     オリジナルの書庫日時を保ちます。RAR が書庫を変更するときに
            書庫日付を更新しないようにします。


    -tl     書庫日時を最も新しいファイルにセットします。RAR が変更した
            書庫日時を、書庫の中の最も新しいファイルの日時にセットする
            ように強制します。


    -tn<time>
            指定された期間以内の新しいファイルを処理します。
            時間の形式は次の通りです。

            [<ndays>d][<nhours>h][<nminutes>m][<nseconds>s]

            例えば、スイッチ -tn15d を使用すると 15日以内の新しいファイル
            を処理します。また、-tn2h30m では、２時間30分以内の新しい
            ファイルを処理します。


    -to<time>
            指定された期間以上過去のファイルを処理します。
            時間の形式は -tn<time> と同様です。


    -ts<m,c,a>[N]
            ファイル日時（更新日時、作成日時、アクセス日時）を格納
            またはセットします。

            スイッチ -tsm はファイル更新日時、-tsc は作成日時、-tsa は
            最後のアクセス日時を、それぞれ格納するようにします。

            RAR 4.x 書庫形式ではスイッチの後ろの省略可能なパラメータは、
            0 から 4 までの数字で、ファイルの時間の精度を指定します。 
            1 は1秒精度、2 は 0.0065536 秒, 3 は 0.0000256 秒, 4 と '+' は
            0.0000001秒の最高のNTFS時間精度になります。
            0 と '-' は、作成日時とアクセス日時を格納せず、更新日時には
            低い精度（2秒）を使用することを意味します。高精度モードは、
            より多くのデータを書庫に追加します。 
            -tsm4 -tsa4 -tsc4 を組み合わせた場合にはファイルごとに最高
            19バイト追加します。精度を指定しない場合には、RAR は '4' (high) 
            を使用します。

            RAR 5.0 書庫形式では、パラメータが '1' のときは1 秒の精度で
            '2, '3', '4'のときは最高のNTFS時間精度になります。

            デフォルトの RAR のモードは -tsm4 -tsc0 -tsa0 です。
            更新日時は高精度で格納しますが、他の日時は無視します。

            ファイルを解凍するときには、作成日時とアクセス日時をセット
            するために -tsc と -tsa スイッチを指定（精度は関係ありません
            が 0 であってはいけません）する必要があります。
            デフォルトでは、書庫に作成日時やアクセス日時が格納されて
            いても、WinRAR は更新日時だけをセットします。解凍された
            ファイルに更新日時がセットされないようにするには、-tsm-
            を使います。

            すべての3個の日時に同じ精度スイッチをセットする場合には、
            日時の種類を省略することができます。
            例えば、-tsm4 -tsa4 -tsc4 は、-ts4, -ts+, -ts に置き換える
            ことができます。-ts- を使うと、格納時には低い精度の更新日時
            を、解凍時にはすべてのファイル日時を無視します。

            書庫を作成するとき、ファイルシステムが高い精度の日時を
            サポートしていない場合には、RAR は自動的に精度を落とします。
            FAT は2秒、Unix は1秒の精度をサポートしています。
            NTFS の日時精度は0.0000001 秒です。

            解凍時にセットされる日時はオペレーティングシステムにより
            制限されます。Windows では更新日時と作成日時とアクセス日時
            のすべてを、Unix では更新日時とアクセス日時をセットでき、
            作成日時はセットしません。

            例:

            1) rar a -ts backup

            最高の精度ですべての日時を格納します。

            2) rar x -tsa backup

            更新日時とアクセス日時をセットします。RAR はデフォルトで
            スイッチ -tsm を使用するので必要ではありません。

            3) rar a -tsm1 -tsc1 backup

            低い精度で更新日時と作成日時を格納します。-tsm1 を指定しない
            と、RAR は更新日時を高い精度で格納します。


    -u      ファイルを更新します。書庫の解凍時と作成時に使用できます。
            コマンド文字列 "a -u" はコマンド u と同じであり、コマンド
            m と mf でも同じように使用できます。
            スイッチ -u が、 x か e で使用された場合、ディスクに存在
            しないファイルとディスクのものより新しいファイルが書庫から
            解凍されます。


    -v      サイズ自動認識でボリュームを作成 または
            すべてのボリュームをリスト表示

            このスイッチはボリュームの作成時とリスト表示時に使うことが
            できます。

            ボリュームの作成時は、ボリュームサイズの自動認識が有効に
            なります。新しいボリュームは作成先メディアのすべての領域
            を使用します。リムーバブルディスクにボリュームを作成する
            ときに便利です。ボリュームについての詳細は -v<size> の
            説明を参照してください。

            リスト表示時には、このスイッチを 'V', 'L' コマンドと同時に
            使った場合、RAR にコマンドラインで指定したボリュームから
            すべてのボリュームの内容をリスト表示することを強制します。
            このスイッチを使わない場合は、RAR は指定したボリュームの
            内容だけを表示します。


    -v<size>[k|b|f|m|M|g|G]
            <size> * 1000 [* 1024 | * 1] のサイズでボリュームを作成します。
            デフォルトでは、このスイッチの <size> は 1000 バイトです
            （1024 バイトではありません）。

            k    キロバイト単位
            b    バイト単位
            m    メガバイト単位
            M    1,000,000バイト単位
            g    ギガバイト単位
            G    1,000,000,000バイト単位
            f    定義済みの数値から選択してサイズを入力できます
                 定義済みの値は、360, 720, 1200, 1440, 2880 になっていて
                 対応するフロッピィディスクのサイズに置き換えられた値です。

            サイズを省略した場合は自動認識します。

            半角ドット(.)を使用して少数を指定できます。
            例えば、-v1.5g スイッチは 1.5ギガバイトを意味します。

            複数の -v スイッチを指定して、それぞれのボリュームに異なる
            サイズを設定することができます。例えば、次のコマンドで、
            最初のボリュームに100KB、２番目に200KB、以降のボリュームに
            300KBのサイズを設定できます。

              rar a -v100k -v200k -v300k arcname

            ボリュームがリムーバブルディスクに作成された場合、最初の
            ボリュームが作成された後で、次のように問い合わせます。

              Create next volume: Yes/No/All

            このタイミングでディスクを交換してください。'A' と答えると、
            すべてのボリュームは一時停止しないで作成されます。

            標準では、RAR ボリュームは 'volname.partNNN.rar' という名前に
            なります。NNN にはボリューム番号が入ります。
            RAR 4.x 書庫形式では、-vn スイッチ を使って拡張子を基本とする
            別な命名にすることができます。その場合、マルチボリュームの
            最初のボリュームの拡張子は、.rar で、以下 .r00 から .r99 まで
            番号を付けられます。
            RAR 5.0 書庫形式では、-vn をサポートしません。

            マルチボリューム書庫を解凍、テストする場合、最初のボリュームの
            名前を使う必要があります。次のボリュームがドライブ、リムーバブル
            ディスクに無かった場合、次のように問い合わせます。

             Insert disk with <next volume name>

            正しいボリュームをディスクに挿入してから何かキーを押して
            ください。

            解凍中、次のボリュームがリムーバブルディスクでない場所に
            見つけられないと、RAR はエラーメッセージを表示して中断します。

             Cannot find <volume name>

            書庫ボリュームは修正できません。コマンド d, f, u, s は
            マルチボリュームに使うことはできません。コマンド a は、新しい
            マルチボリュームを作成するためだけに使うことができます。

            ありえなさそうですが、マルチボリュームセットのファイルの
            サイズが圧縮前より大きくなることがあります。
            これは、'storing'（サイズが大きくなる場合は無圧縮）が、
            マルチボリュームでは使用できないからです。

            書庫ボリュームを自己解凍書庫にできます。このような書庫は、
            スイッチ -v と -sfx を同時に使って作成してください。

            例：

            固定サイズのボリュームで書庫を作成します。

            rar a -s -v1440 floparch.rar *.*

            1440000 バイトのボリュームのソリッド書庫が作成されます。


    -vd     ボリュームを作成する前にディスクの内容を消去します。

            スイッチ -vd を使った場合、目的のディスクにあるすべての
            ファイルとディレクトリは消去されます。
            このスイッチはリムーバブルメディアだけに有効です。このスイッチ
            を使ってハードディスクが消去されることはありません。


    -ver[n] ファイルの以前の版を残します。

            既存の書庫を更新したときに古いバージョンのファイルを保存して
            おくように強制します。古いバージョンは、'filename;n' に改名
            されます。'n' はバージョン番号です。

            標準では、-ver スイッチを指定しないで書庫を解凍するとき、RAR
            はバージョン番号がついていない最後に圧縮したファイルのみ解凍
            します。しかし、バージョン番号まで含めて正確にファイル名を
            指定した場合は、そのファイルが解凍されます。例えば、
            'rar x arcname' では最後のバージョンだけが解凍されます。
            'rar x arcname file.txt;5' としたときは、そのバージョンが書庫
            にあれば'file.txt;5' が解凍されます。

            解凍するときにパラメータを省略して -ver スイッチを指定した場合
            は、RAR は、入力したファイルマスクにマッチするすべてのファイル
            のすべてのバージョンを解凍します。この場合、解凍したファイル
            にはバージョン番号がついたままです。-ver のパラメータに数字を
            指定して、そのバージョンのファイルを解凍することもできます。
            そうすると、RAR はこのバージョンのみを解凍してファイル名から
            バージョン番号を削除します。例えば、 'rar x -ver5 arcname' は、
            ファイルバージョンが 5 のファイルだけを解凍します。


    -vn     旧形式のボリューム名方式を使用

            標準では、RAR ボリュームは 'volname.partNNN.rar' という名前に
            なります。NNN にはボリューム番号が入ります。
            RAR 4.x 書庫形式では、-vn スイッチを使って拡張子を基本とする
            別な命名にすることができます。その場合、マルチボリュームの
            最初のボリュームの拡張子は、.rar で、以下 .R00 から .R99 まで
            番号を付けられます。


    -vp     各ボリュームの後に一時停止

            デフォルトで、RARはリムーバブルディスクに圧縮するときに、空き
            ディスク容量がボリュームサイズより少ない場合に次のボリュームの
            前に確認を求めます。
            このスイッチは、ボリュームの作成時や解凍時にRARに常にそのような
            確認を求めることを強制します。例えば、新しいボリュームを作成後
            すぐに別のメディアにコピーしたい場合に役に立ちます。


    -w<p>   <p> をワークディレクトリとして割り当てます。このスイッチは
            テンポラリファイル用のディレクトリを割り当てるために使用され
            ます。


    -x<f>   指定したファイルやディレクトリ <f> を除外します。ワイルド
            カードは名前とファイルマスクの一部分に使用することができます。
            スイッチ -x は同じコマンドラインで複数の除外マスクを定義する
            ために何回でも指定できます。

            マスクにワイルドカードが含まれているときには、ワイルドカード
            はカレントフォルダと、そのサブフォルダに適用されます。
            ワイルドカードが指定されていない場合には再帰しないので、
            "filename" マスクは、圧縮時はカレントフォルダ、解凍時は書庫の
            あるディレクトリの 'filename' だけを除外します。

            すべてのフォルダの "filename" を除外したい場合には、
            "*\filename" マスクを使用してください。

            ファイルの正確なパスが分かっている場合には、"path\filename" の
            構文で "filename" だけを除外することができます。
            書庫の解凍時に "-xpath\filename" 構文を使った場合には、"path"
            は解凍後のディスクのファイルパスではなく、書庫の内部に存在しな
            ければなりません。

            デフォルトでは、マスクに含まれるワイルドカードはファイルだけに
            適用されます。複数のディレクトリを除外するためには、マスクの
            ワイルドカードにディレクトリを除外する特別な構文を使用してくだ
            さい。このようなマスクは最後にパス区切り文字（Windows の'\'、
            Unix の'/'） を持ちます。
            例えば、"*tmp*\" マスクは、"*tmp*" に一致するすべてのディレクトリ
            を除外します。"*\tmp\" はすべての 'tmp' ディレクトリを除外します。
            ワイルドカードがある場合、両方のマスクはカレントディレクトリと
            すべてのサブフォルダに適用されます。

            もし、1個のディレクトリだけを除外したい場合は、ワイルドカードを
            含んでいない、絶対パスか相対パスの正確なディレクトリの名前を指定
            してください。この場合、パス区切りをマスクに追加する必要はありません。
            パス区切りは、ワイルドカードを含むディレクトリ除外マスクとファイル
            除外マスクとを区別するためにあります。

            例：

            1) rar a -r -x*.jpg -x*.avi rawfiles

            カレントディレクトリとサブディレクトリにある、*.jpgと*.avi以外
            のすべてのファイルを圧縮します。

            2) rar a -r -x*\temp\ savec c:\*

            tempフォルダとtempフォルダに含まれるファイルを除いて、
            c:ドライブのすべてのファイルを圧縮します。

            3) rar x -x*.txt docs

            docs.rar から *.txt を除いたすべてのファイルを解凍します。


    -x@<lf> 指定したリストファイルを使ってファイルを除外します。
            リストファイルパラメータを指定しないで-x@を使った場合は、
            ファイル名はstdin(標準入力)から読み込みます。

            例：

            rar a -x@exlist.txt arch *.exe


    -y      すべての質問に'はい'と答えます。


    -z[f]   ファイル <f> から書庫コメントを読み込みます。
            コメントテキストファイルの文字セットを指定したい場合には、
            には、-sc スイッチを組み合わせて使ってください。
            <f>を指定しない場合は標準入力からコメントを読み込みます。


 制限
 ~~~~

    コマンドの制限:

    コマンド d, u, f, c, cf はボリュームには機能しません。

    コマンド a はボリュームを更新するためには使用できません。
    ボリュームは新規作成のみ可能です。


 終了コード
 ~~~~~~~~~~~

    RAR は処理に成功するとゼロコード(0)で終了します。
    終了コードが 0 以外の場合は、何らかのエラーを示します。

     0     処理が成功しました。
     1     致命的ではないエラーが発生しました。
     2     致命的なエラーが発生しました。
     3     チェックサムが誤ってします。データが壊れています。
     4     k コマンドでロックされている書庫を更新しようとしました。
     5     ディスクの書き込みエラー。
     6     ファイルのオープンエラー。
     7     コマンドラインのオプションが誤っています。
     8     メモリーが足りません。
     9     ファイルの作成エラー。
    10     指定したマスクやオプションに一致したファイルがありません。
    11     パスワードが誤っています。
   255     ユーザーが処理を中止しました。


 用語集
 ~~~~~~

    書庫 (Archive) 
                 １つあるいは複数のファイルを含んでいる特別なファイル。
                 圧縮する、暗号化が任意に選択できる。

    圧縮 (Compression) 
                 サイズが減少するようにデータを符号化する方法。

    チェックサム (Checksum)
                 データブロックやファイルの計算値。データのチェックや
                 ファイルの有効性の確認を行う。

    自己解凍書庫 (SFX)
                 実行形式の書庫。自己解凍モジュールの後ろに圧縮データが
                 続く。解凍するには実行するだけでよい。

    ソリッド (Solid)
                 すべてのファイルを１つの連続的なデータストリームとして
                 みる特別な圧縮方法でパックされた書庫。
                 多数の小さいファイルをパックするときに特に有利。

    ボリューム (Volume)
                 分割した書庫の一部分。書庫を分割することで、それらを
                 様々なリムーバブルディスク保存することが可能になる。
                 ソリッドボリュームは最初から順番に解凍されなくては
                 ならない。


 Copyrights

    (c) 1993-2013 Alexander Roshal



